# Promtail Configuration for Homelab Infrastructure
# Collects logs from Docker containers and system logs

server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # Docker container logs
  - job_name: docker
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
        filters:
          - name: label
            values: ["logging=promtail"]
    relabel_configs:
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*)'
        target_label: 'container'
      - source_labels: ['__meta_docker_container_log_stream']
        target_label: 'logstream'
      - source_labels: ['__meta_docker_container_label_com_docker_compose_service']
        target_label: 'service'
      - source_labels: ['__meta_docker_container_label_com_docker_compose_project']
        target_label: 'project'
    pipeline_stages:
      - json:
          expressions:
            output: log
            stream: stream
            attrs:
      - json:
          expressions:
            tag: attrs.tag
          source: attrs
      - regex:
          expression: '^(?P<time>\S+?) (?P<stream>\S+?) (?P<flags>\S+?) (?P<message>.*)$'
      - labels:
          stream:
          tag:

  # All Docker containers (fallback for containers without specific labels)
  - job_name: docker-all
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
    relabel_configs:
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*)'
        target_label: 'container'
      - source_labels: ['__meta_docker_container_log_stream']
        target_label: 'logstream'
      - source_labels: ['__meta_docker_container_label_com_docker_compose_service']
        target_label: 'service'
      - source_labels: ['__meta_docker_container_label_com_docker_compose_project']
        target_label: 'project'
      # Skip containers that already have the promtail logging label
      - source_labels: ['__meta_docker_container_label_logging']
        regex: 'promtail'
        action: drop
    pipeline_stages:
      - json:
          expressions:
            output: log
            stream: stream
            attrs:
      - json:
          expressions:
            tag: attrs.tag
          source: attrs
      - regex:
          expression: '^(?P<time>\S+?) (?P<stream>\S+?) (?P<flags>\S+?) (?P<message>.*)$'
      - labels:
          stream:
          tag:

  # System logs (syslog)
  - job_name: syslog
    static_configs:
      - targets:
          - localhost
        labels:
          job: syslog
          __path__: /var/log/syslog
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\S+\s+\d+\s+\d+:\d+:\d+)\s+(?P<hostname>\S+)\s+(?P<service>\S+?)(\[(?P<pid>\d+)\])?\:\s*(?P<message>.*)$'
      - labels:
          hostname:
          service:
          pid:
      - timestamp:
          source: timestamp
          format: 'Jan 02 15:04:05'

  # System logs (auth.log)
  - job_name: authlog
    static_configs:
      - targets:
          - localhost
        labels:
          job: authlog
          __path__: /var/log/auth.log
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\S+\s+\d+\s+\d+:\d+:\d+)\s+(?P<hostname>\S+)\s+(?P<service>\S+?)(\[(?P<pid>\d+)\])?\:\s*(?P<message>.*)$'
      - labels:
          hostname:
          service:
          pid:
      - timestamp:
          source: timestamp
          format: 'Jan 02 15:04:05'

  # Traefik access logs (if configured)
  - job_name: traefik-access
    static_configs:
      - targets:
          - localhost
        labels:
          job: traefik-access
          __path__: /var/log/traefik/access.log
    pipeline_stages:
      - json:
          expressions:
            ClientAddr: ClientAddr
            ClientHost: ClientHost
            ClientPort: ClientPort
            ClientUsername: ClientUsername
            DownstreamContentSize: DownstreamContentSize
            DownstreamStatus: DownstreamStatus
            Duration: Duration
            OriginContentSize: OriginContentSize
            OriginDuration: OriginDuration
            OriginStatus: OriginStatus
            Overhead: Overhead
            RequestAddr: RequestAddr
            RequestContentSize: RequestContentSize
            RequestCount: RequestCount
            RequestHost: RequestHost
            RequestMethod: RequestMethod
            RequestPath: RequestPath
            RequestPort: RequestPort
            RequestProtocol: RequestProtocol
            RequestScheme: RequestScheme
            RetryAttempts: RetryAttempts
            RouterName: RouterName
            ServiceAddr: ServiceAddr
            ServiceName: ServiceName
            ServiceURL: ServiceURL
            StartLocal: StartLocal
            StartUTC: StartUTC
            entryPointName: entryPointName
            level: level
            msg: msg
            time: time
      - labels:
          ClientHost:
          DownstreamStatus:
          RequestMethod:
          RequestPath:
          RouterName:
          ServiceName:
          entryPointName:
      - timestamp:
          source: StartUTC
          format: '2006-01-02T15:04:05.000Z'