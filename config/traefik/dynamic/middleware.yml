# Traefik Dynamic Middleware Configuration
# This file contains middleware definitions for security, authentication, and routing

http:
  middlewares:
    # Security headers middleware
    security-headers:
      headers:
        accessControlAllowMethods:
          - GET
          - OPTIONS
          - PUT
          - POST
          - DELETE
        accessControlMaxAge: 100
        hostsProxyHeaders:
          - "X-Forwarded-Host"
        referrerPolicy: "same-origin"
        customRequestHeaders:
          X-Forwarded-Proto: "https"
        customResponseHeaders:
          X-Robots-Tag: "none,noarchive,nosnippet,notranslate,noimageindex"
          X-Forwarded-Proto: "https"
          server: ""
        sslProxyHeaders:
          X-Forwarded-Proto: "https"
        stsSeconds: 31536000
        stsIncludeSubdomains: true
        stsPreload: true
        forceSTSHeader: true
        frameDeny: true
        contentTypeNosniff: true
        browserXssFilter: true
        
    # Rate limiting middleware
    rate-limit:
      rateLimit:
        average: 100
        period: 1m
        burst: 200
        
    # IP whitelist for internal services
    internal-whitelist:
      ipWhiteList:
        sourceRange:
          - "127.0.0.1/32"
          - "10.0.0.0/8"
          - "172.16.0.0/12"
          - "192.168.0.0/16"
          
    # Basic auth for Traefik dashboard
    traefik-auth:
      basicAuth:
        users:
          - "${TRAEFIK_DASHBOARD_USER}:${TRAEFIK_DASHBOARD_PASSWORD_HASH}"
        realm: "Traefik Dashboard"
        
    # Compress responses
    compression:
      compress: {}
      
    # Error pages middleware
    error-pages:
      errors:
        status:
          - "400-599"
        service: error-pages-service
        query: "/{status}.html"
        
    # Circuit breaker middleware for resilience
    circuit-breaker:
      circuitBreaker:
        expression: "NetworkErrorRatio() > 0.30 || ResponseCodeRatio(500, 600, 0, 600) > 0.25"
        checkPeriod: "10s"
        fallbackDuration: "30s"
        recoveryDuration: "10s"
        
    # Retry middleware for transient failures
    retry:
      retry:
        attempts: 3
        initialInterval: "100ms"
        
    # Request/Response size limits
    buffering:
      buffering:
        maxRequestBodyBytes: 10485760  # 10MB
        memRequestBodyBytes: 2097152   # 2MB
        maxResponseBodyBytes: 10485760 # 10MB
        memResponseBodyBytes: 2097152  # 2MB
        retryExpression: "IsNetworkError() && Attempts() < 3"
        
    # Redirect to HTTPS
    https-redirect:
      redirectScheme:
        scheme: https
        permanent: true
        
    # Strip prefix middleware
    strip-prefix:
      stripPrefix:
        prefixes:
          - "/api"
          
    # Add prefix middleware
    add-prefix:
      addPrefix:
        prefix: "/api"
        
    # CORS middleware
    cors:
      headers:
        accessControlAllowOriginList:
          - "https://*.${DOMAIN}"
          - "https://${DOMAIN}"
        accessControlAllowMethods:
          - "GET"
          - "POST"
          - "PUT"
          - "DELETE"
          - "OPTIONS"
        accessControlAllowHeaders:
          - "Content-Type"
          - "Authorization"
          - "X-Requested-With"
        accessControlExposeHeaders:
          - "Content-Length"
          - "Content-Range"
        accessControlAllowCredentials: true
        accessControlMaxAge: 100
        addVaryHeader: true

  # Services for error handling
  services:
    error-pages-service:
      loadBalancer:
        servers:
          - url: "http://error-pages:8080"